version: 2

# TODO: reconcile shared portion of jobs for build and deploy-prod
jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.3-node

    steps:
      - checkout

      # Get Ruby dependencies
      - restore_cache:
          keys:
            - ryanbrookscouk-bundle-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
      - run:
          name: bundle install
          command: bundle install
      - save_cache:
          key: ryanbrookscouk-bundle-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - Gemfile
            - Gemfile.lock

      # Get NPM dependencies
      - restore_cache:
          keys:
            - ryanbrookscouk-packagejson-{{ .Branch }}-{{ checksum "package.json" }}
      - run:
          name: npm install
          command: npm install
      - save_cache:
          key: ryanbrookscouk-packagejson-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - package.json

      # Build the site
      - run:
          name: Build to validate content
          command: ./node_modules/.bin/grunt build

      # Store the built site for debugging
      - store_artifacts:
          path: ./dist
          destination: dist

  deploy-prod:
    docker:
      - image: circleci/ruby:2.6.3-node
    steps:

      - run:
          name: Install node@12.1.0
          command: |
            set +e
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install 12.1.0
            nvm alias default 12.1.0

            # Each step uses the same `$BASH_ENV`, so need to modify it
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV

      - run:
          name: Node version
          command: node --version

      - checkout

      # Get Ruby dependencies
      - restore_cache:
          keys:
            - ryanbrookscouk-bundle-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
      - run:
          name: bundle install
          command: bundle install
      - save_cache:
          key: ryanbrookscouk-bundle-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - Gemfile
            - Gemfile.lock

      # Get NPM dependencies
      - restore_cache:
          keys:
            - ryanbrookscouk-packagejson-{{ .Branch }}-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
      - run:
          name: npm install
          command: npm install
      - save_cache:
          key: ryanbrookscouk-packagejson-{{ .Branch }}-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
          paths:
            - package.json
            - package-lock.json

      #TODO remove
      - run:
          name: Git status
          command: git diff package-lock.json | cat


      # Deploy the site
      - run:
          name: Deploy to Github Pages
          command: ./node_modules/.bin/grunt deploy

      # Store the built site for debugging
      - store_artifacts:
          path: ./dist
          destination: dist

workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - master
                - develop
      - deploy-prod:
          filters:
            branches:
              only: develop

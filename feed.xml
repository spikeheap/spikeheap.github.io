<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
	<channel>
		<title>Ryan Brooks&#39; blog</title>
		<description>Technical musings and notes from a polyglot developer</description>		
		<link>http://ryanbrooks.co.uk</link>
		<atom:link href="http://ryanbrooks.co.uk/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Migrating user avatars to circular crops, with ImageMagick</title>
				<dc:creator></dc:creator>
				
					<description>&lt;p&gt;Picture the scene: you have a few thousand users with avatars on your site. You want to change from a boring 4x3 photo to a cool and hip circular crop. You know it’ll look great for new users, but we don’t want to leave the existing ones behind.
&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;Let’s imagine our current approach to user avatars is to accept any size and shape image. Because we’re sensible, we retain the originally uploaded image and generate a thumbnail to be used on the site which maintains the proportions but constrains the longest side to 100 pixels.&lt;/p&gt;

&lt;p&gt;Our new UI requires circular images at three different sizes (icon, default and large avatars). We want to take this opportunity to generate thumbnails at these sizes (and x2 for Retina screens) so we can keep file sizes small and our site as fast as possible. Because we can &lt;a href=&quot;http://www.abeautifulsite.net/how-to-make-rounded-images-with-css/&quot;&gt;easily create circular masks with CSS&lt;/a&gt;, we just need create square versions of the images, and we have a few options:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Stretch the image to fit a square. This is obviously a bad idea.&lt;/li&gt;
  &lt;li&gt;Crop the top/bottom or left/right of the longest side to make the image square.&lt;/li&gt;
  &lt;li&gt;Fit the entire image within the square, and pad the excess.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In this case I believe option 2 gives the best outcome – no excess whitespace and wholly-filled circles, but our users didn’t have any of this in mind when they uploaded their images in the dim and distant past so we need to get an idea of how these changes will affect their existing images.&lt;/p&gt;

&lt;h4 id=&quot;image-dimensions&quot;&gt;Image dimensions&lt;/h4&gt;
&lt;p&gt;The first thing we can do is calculate the distribution of image proportions. This is useful alongside the assumption that squarer images are more likely to crop without losing the subject in the image.&lt;/p&gt;

&lt;p&gt;ImageMagick has a set of handy command-line tools to help us with this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;find avatar_images \
  -type f \
  -not -name &quot;thumb_*&quot; \
  -exec identify \
  -format %w\ %h\\n {} \; | awk &#39;{ print $1/$2 }&#39; | sort | cut -c1,2,3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the above example we search the &lt;code&gt;avatar_images&lt;/code&gt; directory, include all files, but filter out images we’ve generated in the past (prefixed with &lt;code&gt;thumb_&lt;/code&gt;). The output will be a list of the image propotions as double values (e.g. 4/3 → 1.333, 6/9 → 0.666).&lt;/p&gt;

&lt;p&gt;You can dump this list into Excel and &lt;a href=&quot;http://www.excel-easy.com/examples/histogram.html&quot;&gt;generate a histogram&lt;/a&gt;, or just use it to highlight how many values are outside of ‘squarish’.&lt;/p&gt;

&lt;p&gt;This approach can help if you have a very large set of user avatar images, but it doesn’t help us with the qualitative task of checking that they look ‘okay’ with the new circular crop.&lt;/p&gt;

&lt;h4 id=&quot;creating-an-avatar-montage-for-quick-visual-checking&quot;&gt;Creating an avatar montage for quick visual checking&lt;/h4&gt;

&lt;p&gt;Humans are really (really) good at recognising faces. They’re not so good at monotony, so walking through 10,000 users’ profile pages isn’t going to work very well. A montage of all the avatars on a single image works surprisingly well – even at smaller sizes the headless avatars or dodgy crops jumped out at us.&lt;/p&gt;

&lt;p&gt;ImageMagick is all set up to generate our rounded avatar images:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;#/bin/sh
convert $1 \
        -resize x800 -resize &#39;800x&amp;lt;&#39;   -resize 50% \
        -gravity center  -crop 400x400+0+0 +repage \
        \( +clone -threshold -1 -negate -fill white -draw &quot;circle 200,200 200,0&quot; \) \
                -alpha off -compose copy_opacity -composite \
                \-auto-orient \
    cropped_${1}.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This generates a circular mask, and overlays that on the cropped, centred image. Wrapping the above with &lt;code&gt;find&lt;/code&gt; allows us to loop through and process all our images:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# assumes we&#39;ve placed the above snippet crop_avatars.sh
mkdir cropped_images
find ./images -type f -exec ./crop_avatars.sh {} \;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We now have a &lt;code&gt;cropped_images/&lt;/code&gt; directory containing smaller, rounder versions of the images. All we need to do then is stitch them together, and once again ImageMagick is there for us:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;montage cropped_images/* avatar_montage.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After all of that you should end up with something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2015-08-28_montage.jpg&quot; alt=&quot;A montage of user avatars&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Have fun with it, but don’t be surprised when everyone wants to see your new creation. For many organisations this could well be the first chance they’ve had to see many of their users, and a huge grid of (hopefully smiling) faces can be quite powerful.&lt;/p&gt;

&lt;h4 id=&quot;references&quot;&gt;References&lt;/h4&gt;

&lt;p&gt;The following pages were hugely helpful for figuring out how to achieve the different portions of ImageMagic magic:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;http://daemonsandagents.tumblr.com/post/108369306151/imagemagick-ways-of-cropping-an-image-to-a&lt;/li&gt;
  &lt;li&gt;http://www.imagemagick.org/Usage/resize/#space_fill&lt;/li&gt;
  &lt;li&gt;http://www.imagemagick.org/Usage/thumbnails/#fit_summery&lt;/li&gt;
  &lt;li&gt;http://www.imagemagick.org/Usage/crop/#crop_gravity&lt;/li&gt;
  &lt;li&gt;http://www.imagemagick.org/Usage/montage/&lt;/li&gt;
&lt;/ul&gt;

</description>
				
                        	<pubDate>Sat, 05 Sep 2015 00:00:00 +0100</pubDate>
				<link>http://ryanbrooks.co.uk/posts/2015-09-05-imagemagick-circular-avatars/</link>
				<guid isPermaLink="true">http://ryanbrooks.co.uk/posts/2015-09-05-imagemagick-circular-avatars/</guid>
			</item>
		
			<item>
				<title>Kitematic for boot2docker users</title>
				<dc:creator></dc:creator>
				
					<description>&lt;p&gt;A while ago I switched from using boot2docker directly to the Kitematic Mac app. Although Kitematic generally makes life a bit easier when managing Docker containers, it was a bit of a pain to get it running.&lt;/p&gt;

&lt;p&gt;After the Kitematic installation, the VM started but Kitematic had trouble connecting to it. The error messages showed &lt;code&gt;boot2docker&lt;/code&gt; paths so I made the assumption they’d got in a tangle. Uninstalling boot2docker didn’t entirely solve the problem, as I was still unable to connect using the terminal. The error pointed us in the right direction:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;FATA[0000] Couldn&#39;t read ca cert /Users/rb/.boot2docker/certs/boot2docker-vm/ca.pem: open /Users/rb/.boot2docker/certs/boot2docker-vm/ca.pem: no such file or directory
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The other error I was hitting was a bit more vague, but still points to a certificate issue.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Get http://192.168.99.102:2376/v1.17/containers/json: malformed HTTP response &quot;\x15\x03\x01\x00\x02\x02&quot;. Are you trying to connect to a TLS-enabled daemon without TLS?
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You may find it’s because the boot2docker environment variables are being set in your &lt;code&gt;.profile&lt;/code&gt;, &lt;code&gt;.bashrc&lt;/code&gt; or &lt;code&gt;.zshenv&lt;/code&gt;, something like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export DOCKER_TLS_VERIFY=1
export DOCKER_HOST=tcp://192.168.59.103:2376
export DOCKER_CERT_PATH=/Users/rb/.boot2docker/certs/boot2docker-vm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To get the docker CLI playing nicely with our shiny new Kitematic instance, we just need to replace those lines with the following:
&lt;code&gt;bash
export DOCKER_TLS_VERIFY=1
export DOCKER_HOST=tcp://192.168.60.102:2376
export DOCKER_CERT_PATH=~/.docker/machine/machines/dev
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Note that if (like me) you’ve already removed/reinstalled Kitematic, you may find the IP (and possibly subnet) has moved from &lt;code&gt;192.168.60.103&lt;/code&gt;. In my case it is now &lt;code&gt;192.168.99.102&lt;/code&gt;.&lt;/p&gt;

</description>
				
                        	<pubDate>Fri, 28 Aug 2015 00:00:00 +0100</pubDate>
				<link>http://ryanbrooks.co.uk/posts/2015-08-28-kitematic-for-boot2docker-users/</link>
				<guid isPermaLink="true">http://ryanbrooks.co.uk/posts/2015-08-28-kitematic-for-boot2docker-users/</guid>
			</item>
		
			<item>
				<title>Constraining width for LabKey WebParts and Views</title>
				<dc:creator></dc:creator>
				
					<description>&lt;p&gt;Building custom web views within LabKey is pretty straightforward, but if you find yourself needing to constrain the contents of your module horizontally you’ll quickly find that the surrounding tables will gladly stretch to any width. Fortunately restricting the width of hte container is pretty straightforward.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Wrap your contents in a table with &lt;code&gt;table-layout: fixed; width: 100%&lt;/code&gt; and the contents won’t push the surrounding page to wider than the browser window.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;LabKey’s JavaScript API is rich, and allows complex JavaScript applications to be built against it whilst being hosted as web parts or views within the standard LabKey environment. As big fans of &lt;a href=&quot;http://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt; we were keen to leverage the structure and base components within our embedded application, but quickly came up against an issue where the web part container would grow infinitely to contain our contents. This made things like &lt;a href=&quot;http://getbootstrap.com/components/#nav-justified&quot;&gt;justified navs&lt;/a&gt; irksome as our content could grow horizontally.&lt;/p&gt;

&lt;p&gt;What we really needed was to constrain the view to 100% of the available space, which we achieved by wrapping it in a table with a specified width:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;table class=&quot;myapp&quot;&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;
        &amp;lt;h1&amp;gt;My amazing application&amp;lt;/h1&amp;gt;
      &amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;

&amp;lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;&amp;lt;%=contextPath%&amp;gt;/myapp/styles/index.min.css&quot;&amp;gt;
&amp;lt;script src=&quot;&amp;lt;%=contextPath%&amp;gt;/myapp/js/application.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;…and adding a CSS rule to set the table layout:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;.myapp {
    table-layout: fixed; 
    width: 100%
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Table-based layouts are a bit out of fashion these days, but it’s necessary here because of the unbounded tables wrapping the web parts. If there’s a more elegant way of solving it, I’d love to hear about it in the comments.&lt;/p&gt;

&lt;p&gt;With that wrapper in place the standard Bootstrap components went back to behaving as they would in a standalone app, and we’re able to use &lt;code&gt;overflow-x: scroll&lt;/code&gt; where we need to display tables which don’t fit the viewport without breaking the width of the entire LabKey page.&lt;/p&gt;

</description>
				
                        	<pubDate>Tue, 16 Jun 2015 00:00:00 +0100</pubDate>
				<link>http://ryanbrooks.co.uk/posts/2015-06-16-labkey-full-width-apps/</link>
				<guid isPermaLink="true">http://ryanbrooks.co.uk/posts/2015-06-16-labkey-full-width-apps/</guid>
			</item>
		
			<item>
				<title>Reclaiming my Saturday mornings</title>
				<dc:creator></dc:creator>
				
					<description>&lt;p&gt;You hear it everywhere: ‘if you want something doing well, do it yourself’. Maybe the primary source is beleaguered managers in stagnant organisations where delivering on promises is the exception rather than the rule, who knows.&lt;/p&gt;

&lt;p&gt;That message ingrained itself in me as I grew up. When I started managing people and projects it took a huge effort to let go of the critical tasks, and not only to trust people to do the work well, but also to accept that ‘doing it well’ might actually involve doing it differently to how I would have.&lt;/p&gt;

&lt;p&gt;As a specialising generalist I’ve forged my career so far by trying to understand everything, and to be able to at least get by in most areas of technology. At home I take pride in being able to fix (just about) anything and &lt;a href=&quot;/posts/2013-12-01-pi-powered-central-heating-phase-1/&quot;&gt;hack the physical world&lt;/a&gt; to meet our needs. Plus, getting outside and chopping logs or fixing bikes is a nice distraction after a day in front of the computer.&lt;/p&gt;

&lt;p&gt;In short, I want to do everything, or at least be involved in everything. I want to understand what’s going on in the world around me, fuelled by curiosity and the feeling that I &lt;em&gt;should&lt;/em&gt; be able to do it.&lt;/p&gt;

&lt;p&gt;The problem I’ve faced recently, though, is that I don’t have enough time. Or rather, I don’t do enough of the things I &lt;strong&gt;really&lt;/strong&gt; care about. Moving to contract work has opened up a whole new world of things for me to learn and take on: accounting, law, marketing, operations; and all of that happens outside of the 9-to-5, when I’m working with clients.&lt;/p&gt;

&lt;p&gt;The Internet is full of answers, though they seem to primarily revolve around sleeping less or cutting out TV. I’m sure getting up earlier works for many, but I like my 8 hours sleep (when I get it) and don’t want to lose productivity later on as it catches up with me.&lt;/p&gt;

&lt;p&gt;If I end up in front of the TV it’s usually because I’ve run out of cognitive capacity and need a bit of downtime, so while watching less TV is a good idea, the benefit is in spending more time with the ones I love and getting outside.&lt;/p&gt;

&lt;p&gt;I may be painting a bleak picture, but over the past few weeks a couple of things have had a positive impact on how much I ‘get stuff done’:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Delegating as much as possible, and anything that doesn’t get me closer to my goal.&lt;/li&gt;
  &lt;li&gt;Working through tiny tasks in time that I’d usually just lose.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;delegate-it-all&quot;&gt;Delegate it all&lt;/h4&gt;

&lt;p&gt;How many things do you do because you have to, but which don’t directly contribute to your happiness or professional development? Cleaning, laundry, DIY, fixing the vacuum cleaner. Assuming you live in any reasonably built up area, there’s probably a host of companies specialising in these tasks, waiting to take them off your plate. How much is that 30-60 minutes a day worth to you? Could you swap out these tasks for paid employment for the same amount of time and end up &lt;em&gt;better off&lt;/em&gt;, or swap them out for time spent in the countryside or doing something you enjoy?&lt;/p&gt;

&lt;p&gt;The problem is that sounds very extravagant, right? I can’t imagine paying someone to clean my house so I don’t have to, and would almost feel ashamed that I wasn’t doing it myself. Yet somehow I don’t have a problem with Jennifer doing most of the cooking when I’ve got a busy stretch.&lt;/p&gt;

&lt;p&gt;Second-guessing each thing in my to-do list has been quite helpful, even though it’s hard work for me. Do I really need to learn how to repair wetsuits, research and purchase the best materials for it, then spend a couple of hours painstakingly gluing and stitching it, or could I just send it off to &lt;a href=&quot;http://www.bodylinewetsuitrepairs.co.uk/&quot;&gt;a wetsuit repair company&lt;/a&gt; (who’ll certainly do a much better job) for £15 or so?&lt;/p&gt;

&lt;h4 id=&quot;making-dead-time-work&quot;&gt;Making dead time work&lt;/h4&gt;

&lt;p&gt;I used to spend Saturday mornings working through a list of small, 5-minute jobs I’d built up during the week. Then I realised how many times I pulled out my phone and read BBC News for 5-10 minutes: on the bus, waiting for a meeting. I’d got to a point where anything less than a clear hour free and it didn’t seem worth starting something.&lt;/p&gt;

&lt;p&gt;Creating a new to-do list, containing only things that can be done in 5-30 minute bursts, has helped me reclaim this time. Technical podcasts (I thoroughly recommend &lt;a href=&quot;http://devchat.tv/ruby-rogues/&quot;&gt;the Ruby Rogues&lt;/a&gt; and &lt;a href=&quot;http://devchat.tv/adventures-in-angular&quot;&gt;Adventures in Angular&lt;/a&gt;) replace music while I’m walking around Oxford, expenses and timekeeping get done on the bus ride back into Oxford when I’m not cycling (so when I arrive home my work day is completely finished), and replying to Facebook and Twitter conversations get a few minutes before lunch or a cup of tea. Taking the bus for 20 minutes each morning last week enabled me write 80% of this blog post.&lt;/p&gt;

&lt;p&gt;These have helped me reclaim my Saturday mornings, and generally feel like I’m getting more done.&lt;/p&gt;

&lt;h4 id=&quot;the-big-caveat&quot;&gt;The big caveat&lt;/h4&gt;

&lt;p&gt;These two approaches have helped me feel like I’m making better progress. If you’ve found this while searching for how to get more done then hopefully it’ll help you too, but it comes with a caveat: &lt;strong&gt;there’s only a finite amount of time available to each of us&lt;/strong&gt;. Perhaps a better, third tip is to learn to say ‘no’, and to try not to take on too much, rather than trying to fit more in. Slowing things down can help you achieve more in the long run. I’m sure there’s a fable about that.&lt;/p&gt;

</description>
				
                        	<pubDate>Sun, 22 Mar 2015 00:00:00 +0000</pubDate>
				<link>http://ryanbrooks.co.uk/posts/2015-03-22-reclaiming-my-saturday-mornings/</link>
				<guid isPermaLink="true">http://ryanbrooks.co.uk/posts/2015-03-22-reclaiming-my-saturday-mornings/</guid>
			</item>
		
			<item>
				<title>App-wide AngularJS alerts</title>
				<dc:creator></dc:creator>
				
					<description>&lt;p&gt;Generic alerts are a common requirement in most web applications, and as your Angular application grows in complexity the importance of a standardised way of feeding back to the user gains importance with it. Luckily it’s quite straightforward to leverage Angular services as a system-wide alerting tool.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;There are a number of articles covering Angular user alerting, but each one relied on &lt;code&gt;$rootScope&lt;/code&gt; or nested scopes. I try to avoid use of the root scope where possible, in the same way we shun the use of the global namespace in JavaScript in general.&lt;/p&gt;

&lt;p&gt;Th first problem we need to solve is to collect and manage the list of alerts. to do this we can create a very simple Angular service:&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;; (function (angular) {
  &amp;#39;use strict&amp;#39;;
  angular
    .module(&amp;#39;pageAlerts&amp;#39;)
    .factory(&amp;#39;PageAlertsService&amp;#39;, [ &amp;#39;$timeout&amp;#39;, function($timeout) {

      // Private functions and internal state
      var internal = {

        alerts: [],

        addAlert: function(type, message, autoClose) {
          var newAlert = {
            type: type,
            message: message,
            close: function() { internal.removeAlert(this) }
          };
          internal.alerts.push( newAlert );
          if(autoClose){
            $timeout(function() { newAlert.close() }, 5000)
          }
        },

        removeAlert: function(alert) {
          internal.alerts.splice( internal.alerts.indexOf(alert), 1);
        }
      };

      // Return the public API for the service
      // We&amp;#39;ll expose the `alerts` array for convenience
      return {
        addError: function(message, autoClose) {
          internal.addAlert(&amp;#39;danger&amp;#39;, message, autoClose);
        },
        addWarning: function(message, autoClose) {
          internal.addAlert(&amp;#39;warning&amp;#39;, message, autoClose);
        },
        addSuccess: function(message, autoClose) {
          internal.addAlert(&amp;#39;success&amp;#39;, message, autoClose);
        },

        alerts: internal.alerts
      };
    } ])
})(window.angular);
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/spikeheap/9709d80f14bf63050d6c.js?file=PageAlertsService.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;We can then create a directive to interact with the service:&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;; (function (angular) {
  &amp;#39;use strict&amp;#39;;
  angular
    .module(&amp;#39;pageAlerts&amp;#39;)
    .directive(&amp;#39;pageAlerts&amp;#39;, [&amp;#39;PageAlertsService&amp;#39;, function(PageAlertsService) {
      return {
        templateUrl: &amp;#39;/directives/PageAlerts/PageAlerts.html&amp;#39;,
        replace: true,
        link: function (scope) {
          scope.alerts = PageAlertsService.alerts;
        }
      }
    }]);
}(window.angular));
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/spikeheap/9709d80f14bf63050d6c.js?file=PageAlerts.js&quot;&gt; &lt;/script&gt;

&lt;noscript&gt;&lt;pre&gt;&amp;lt;div&amp;gt;
  &amp;lt;alert ng-repeat=&amp;quot;alert in alerts&amp;quot; type=&amp;quot;{{alert.type}}&amp;quot; close=&amp;quot;alert.close()&amp;quot;&amp;gt;{{alert.message}}&amp;lt;/alert&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/spikeheap/9709d80f14bf63050d6c.js?file=PageAlerts.html&quot;&gt; &lt;/script&gt;

&lt;p&gt;The above example uses &lt;a href=&quot;TODO&quot;&gt;Angular Bootstrap&lt;/a&gt; alerts, but you can obviously roll your own within the directive.&lt;/p&gt;

&lt;p&gt;To add the alerts to your page all you need is &lt;code&gt;&amp;lt;my-page-alerts&amp;gt;&amp;lt;/my-page-alerts&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The service/directive pair results in a globally accessible alerting service without the need to pollute the &lt;code&gt;$rootScope&lt;/code&gt;. One criticism of this approach is that the service and directive are tightly coupled, but this can be remedied by passing in the service as an attribute to the directive, an exercise I’ll leave to the reader (but grab me in the comments or &lt;a href=&quot;https://twitter.com/spikeheap&quot;&gt;on Twitter&lt;/a&gt; if you want a hand ;) ).&lt;/p&gt;

</description>
				
                        	<pubDate>Tue, 17 Mar 2015 00:00:00 +0000</pubDate>
				<link>http://ryanbrooks.co.uk/posts/2015-03-17-angular-user-alerts/</link>
				<guid isPermaLink="true">http://ryanbrooks.co.uk/posts/2015-03-17-angular-user-alerts/</guid>
			</item>
		
			<item>
				<title>Give and tell challenge</title>
				<dc:creator></dc:creator>
				
					<description>&lt;p&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3908/14848287869_804a39900f_z_d.jpg&quot; alt=&quot;Ice Bucket Challenge&quot; /&gt; &lt;small&gt;Image courtesy of &lt;a href=&quot;https://www.flickr.com/photos/quintanomedia/14848287869/&quot;&gt;Quintano Media / Flickr&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;The Ice Bucket Challenge has been a tour-de-force for charitable donations, and has raised a staggering amount of money for the undoubtedly underfunded organisations in the US and here in the UK. If you haven’t already, I’d urge you to &lt;a href=&quot;http://www.mndassociation.org/get-involved/donations&quot;&gt;consider donating&lt;/a&gt; to this worth cause and to find out more about the disease and how it affects people.&lt;/p&gt;

&lt;p&gt;It seems like a no-brainer, right? Not quite. Yesterday I was nominated and all of my misgivings were brought to the fore. Do I just do it and get on with life, or do I look like uncharitable douche and shun the craze. Luckily, thanks to &lt;a href=&quot;http://www.ceoblues.com/archive/2014/august/giveandtell&quot;&gt;Dan James&lt;/a&gt; and &lt;a href=&quot;https://medium.com/@boagworld/the-ice-bucket-challenge-e0663fbf6544&quot;&gt;Paul Boag&lt;/a&gt; there’s a third option, just giving (no trademark infringement intended).&lt;/p&gt;

&lt;h3 id=&quot;why-am-i-uncomfortable-with-it&quot;&gt;Why am I uncomfortable with it&lt;/h3&gt;

&lt;p&gt;I don’t want to dwell on the negatives, because after all this campaign has done a lot of good and helped to raise awareness about Motor Neurone Disease. There are also a number of people who have described my misgivings in far more eloquent terms (feel free to check out the links in the notes section at the bottom). Mostly I dislike the focus on dumping ice on your head rather than regularly supporting a charity and understanding the work it’s doing. It also feels very wrong to be wasting water and energy when &lt;a href=&quot;https://www.dosomething.org/facts/11-facts-about-water-developing-world&quot;&gt;884 million people lack access to safe water&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;my-cause-the-ms-trust&quot;&gt;My cause, the MS Trust&lt;/h3&gt;

&lt;p&gt;Multiple sclerosis is a disease which affects &lt;a href=&quot;http://www.mstrust.org.uk/information/aboutms/keyfacts.jsp&quot;&gt;over 100,000&lt;/a&gt; people in the UK alone, and has no known cure. It’s a degenerative disease of the nervous system and affects people in a myriad different ways but often affects vision, sleep and mobility.&lt;/p&gt;

&lt;p&gt;Multiple sclerosis is close to my heart because my father has suffered with it for over 10 years. Last year I &lt;a href=&quot;http://teampedal.com&quot;&gt;cycled from Bangor to Switzerland&lt;/a&gt; to raise money for the MS Trust and awareness of multiple sclerosis in general, and hope to do an even bigger challenge in the near future.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://www.mstrust.org.uk/donate-online/&quot;&gt;MS Trust&lt;/a&gt; is a charity focussed on helping people with multiple sclerosis by providing information and support, and funding research and training for healthcare professionals. I particularly like that they are all about helping sufferers of MS, enabling them to manage the disease and still make the most of their lives. Until a cure is found it’s the support networks and education within the healthcare industry that has a huge impact on people living with MS.&lt;/p&gt;

&lt;p&gt;So today I have donated to them again, and reminded myself that I need to do more.&lt;/p&gt;

&lt;h3 id=&quot;just-give&quot;&gt;Just give&lt;/h3&gt;

&lt;p&gt;So my message is really this: find a cause you care about and think about what you can do to help. Maybe it’s donating money, in which case remember that regular small donations have a much more positive effect than one-off larger donations. Maybe it’s a more hands-on approach offering pro-bono work or heading to a local centre to help out. If you feel comfortable evangelising your goodwill in the hope of raising awareness that’s fine too. If you’re not and want to keep your charitable donations under wraps, that’s fine too. After all, it’s not about us really.&lt;/p&gt;

&lt;h3 id=&quot;nominating-others&quot;&gt;Nominating others&lt;/h3&gt;

&lt;p&gt;So it’s my turn to hand on the baton and nominate three more people to highlight a charity they care about or give to a charity and tell us about them. But why stop at three? Three’s to few.&lt;/p&gt;

&lt;p&gt;Instead I nominate you, the reader, to take up this challenge. I know you’re there, so don’t shirk your responsibility. Let me know when you’ve done it in the comments. Or don’t if you’re a bit bitter that I got you into this mess.&lt;/p&gt;

&lt;p&gt;If you don’t like the sound of that, feel free to dump a bucket of icy water over your head and upload it to YouTube as well. It’s all helping spread the word for good causes.&lt;/p&gt;

&lt;p&gt;Other links:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.telegraph.co.uk/men/the-filter/11058891/Why-I-turned-down-the-Ice-Bucket-Challenge.html&quot;&gt;Why I turned down the Ice Bucket Challenge (The Telegraph)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.theguardian.com/commentisfree/2014/aug/26/dodge-ice-bucket-challenge-avoid-fun-retain-dignity&quot;&gt;How to dodge the ice bucket challenge (The Guardian)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.telegraph.co.uk/news/worldnews/europe/spain/11059346/Ice-bucket-challenge-Belgian-man-taken-to-hospital-after-400-gallons-of-water-dropped-on-his-head-by-plane.html&quot;&gt;Man vs. firefighting plane (The Telegraph)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@seanuk/give-and-tell-challenge-834534af3373&quot;&gt;Give and Tell Challenge (Medium)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@boagworld/the-ice-bucket-challenge-e0663fbf6544&quot;&gt;The ice bucket challenge (Medium)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.ceoblues.com/archive/2014/august/giveandtell&quot;&gt;Give and Tell (CEO Blues)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
				
                        	<pubDate>Sat, 27 Sep 2014 00:00:00 +0100</pubDate>
				<link>http://ryanbrooks.co.uk/posts/2014-09-27-give-and-tell/</link>
				<guid isPermaLink="true">http://ryanbrooks.co.uk/posts/2014-09-27-give-and-tell/</guid>
			</item>
		
			<item>
				<title>JSOxford NodeBots, August 2014</title>
				<dc:creator></dc:creator>
				
					<description>&lt;p&gt;On the 23rd of August we ran the last event in the &lt;a href=&quot;http://jsoxford.com/2014/summer-of-hacks/&quot;&gt;JSOxford 2014 Summer of Hacks&lt;/a&gt;, building JavaScript powered NodeBots. Cue maniacal cackling as we plan to take over the world.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;A &lt;a href=&quot;http://nodebots.io/&quot;&gt;NodeBot&lt;/a&gt; is any JavaScript-powered robot, and the aim of the day was to bridge the gap into the physical world with the help of Arduinos, sensors, servos, motors, LEDs and a load of LEGO.&lt;/p&gt;

&lt;p&gt;Most importantly, &lt;a href=&quot;https://www.youtube.com/watch?v=uEx5G-GOS1k&quot;&gt;we had a flag&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2014-08-27_03.jpg&quot; alt=&quot;NodeBots flag&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/intent/follow?screen_name=_alanshaw&quot;&gt;Alan Shaw&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=olizilla&quot;&gt;Oli Evans&lt;/a&gt; very kindly came up for the day from London to impart some of their NodeBots wizardry on us and show off their impressive suite of hardware. It was great to start the day with the message that ‘hardware is really hard’ – as I repeatedly drove our JS remote control car into the wall I was definitely feeling that!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2014-08-27_09.jpg&quot; alt=&quot;NodeBots presentation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We purchased 10 &lt;a href=&quot;http://oomlout.co.uk/&quot;&gt;oomlout starter kits&lt;/a&gt; and had a few servos, Arduino Uno boards and a load of wires kicking around, so there was plenty of kit and the day started with most people running through the introductory blinking LED lessons. Some chose to start with Arduino and some went straight to using the Johnny Five library, a JS library for controlling the Arduino inputs/outputs over the USB cable.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2014-08-27_04.jpg&quot; alt=&quot;npm install johnny-five (t-shirt)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once the initial single-LED board was out the way things got a bit more interesting, and the rest of the day saw some cool little projects at varying levels of completeness (sorry if I forgot yours):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A parking sensor which evolved into an &lt;a href=&quot;http://instagram.com/p/sC_S_npxm-&quot;&gt;octocat alert&lt;/a&gt; with lights, beeping an waving octocats.&lt;/li&gt;
  &lt;li&gt;A RESTful web-based temperature sensor.&lt;/li&gt;
  &lt;li&gt;A temperature-sensing board with LCD display.&lt;/li&gt;
  &lt;li&gt;A device built with Scratch for Arduino.&lt;/li&gt;
  &lt;li&gt;2-bit Guitar Hero. I still have that Sweet Child O’ Mine riff replaying in my head.&lt;/li&gt;
  &lt;li&gt;An RC car with automatic braking to avoid obstacles (or not, it turned out)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We deliberately didn’t set a particular objective so everyone could plough on at their own pace and dive into whatever grabbed their interest. This worked really well, and had the added advantage that it was really easy to organise!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2014-08-27_10.jpg&quot; alt=&quot;Marcus, Chris and sensors&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After Oli and Alan had got us all excited about the possibilities they set about linking a Logitech gaming joypad with the CrazyFlie, a cool but twitchy little quadcopter with a death-wish. These little devices are quite exciting (there’s nothing boring about flying) but can pick up a lot of speed and cause a lot of damage to themselves with a bit of errant programming.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2014-08-27_06.jpg&quot; alt=&quot;Crazyflie quadcopter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Needless to say it didn’t take long before the inevitable:&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p&gt;...annnnd the &lt;a href=&quot;https://twitter.com/hashtag/crazyflie?src=hash&quot;&gt;#crazyflie&lt;/a&gt; is broken :( &lt;a href=&quot;https://twitter.com/JSOxford&quot;&gt;@JSOxford&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/nodebots?src=hash&quot;&gt;#nodebots&lt;/a&gt;&lt;/p&gt;&amp;mdash; Alan Shaw (@_alanshaw) &lt;a href=&quot;https://twitter.com/_alanshaw/statuses/503178382201618433&quot;&gt;August 23, 2014&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;Fortunately there was plenty of other kit to get overly enthusiastic about.&lt;/p&gt;

&lt;p&gt;One limitation of johnny-five is that you need a connection to a laptop to run the JavaScript, so roving machines or fighting bots can be a problem. The &lt;a href=&quot;http://www.espruino.com/&quot;&gt;Espruino&lt;/a&gt; and &lt;a href=&quot;https://tessel.io/&quot;&gt;Tessel&lt;/a&gt; boards look really promising because they take different approaches to enabling developers to write JS and end up with a standalone board.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2014-08-27_07.jpg&quot; alt=&quot;Tessel board&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;pinoccio-and-the-dension-wirc&quot;&gt;Pinoccio and the Dension WiRC&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/intent/follow?screen_name=paradigm_tee&quot;&gt;Chris&lt;/a&gt; and I wanted to hack on the JSOxford RC cars, a trio of &lt;a href=&quot;http://www.dension.com/product/wirc-wifi-rc-receiver&quot;&gt;Dension WiRC&lt;/a&gt; cars which can be controlled using JavaScript over WiFi and have a webcam onboard. The is a &lt;a href=&quot;https://github.com/jsoxford/node-wirc&quot;&gt;node library&lt;/a&gt; from a previous hack-day to communicate with the car.&lt;/p&gt;

&lt;p&gt;Our first thought was to add more sensors to the existing car but that didn’t seem possible so we settled on the idea of using a Pinoccio board as a sensor array and then have a single JS script running on the laptop which would use these sensor readings to action the car. The Pinoccio board seemed perfect for this because the ‘lead scout’ board has a WiFi backpack. Now that I’ve had a couple of days to look into Pinoccio in a bit more detail it’s clear that all the limitations I’m about to talk about were because of our lack of understanding. Hopefully we’ll run another NodeBots day and get a chance to play with it again.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2014-08-27_13.jpg&quot; alt=&quot;Pinoccio boards&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pinocc.io/&quot;&gt;Pinoccio boards&lt;/a&gt; are a great idea: mesh-networked Arduino-based devices which connect to the Internet by default, combined with a web-based IDE. The result is a system you can get up and running with in minutes. Needless to say, having feedback on the IR rangefinder’s value in the IDE without typing a single line of code got us quite excited.&lt;/p&gt;

&lt;p&gt;I’d thoroughly recommend having a closer look at the Pinoccio boards. I am particular taken by the way it has battery (including charging), wireless networking, and more importantly a way to access the device from a computer without needing to plug in. The boards also have a temperature sensor which is a nice addition for the home automation projects I’m thinking about.&lt;/p&gt;

&lt;p&gt;Unfortunately our enthusiasm was stifled when we tried to use the &lt;a href=&quot;https://github.com/Pinoccio/client-node-pinoccio/&quot;&gt;node client library&lt;/a&gt;. While it’s suitable for non-realtime applications, the library connects to hq.pinocc.io rather than to the device, which leads to &amp;gt;1s latency for reads. The &lt;a href=&quot;https://www.npmjs.org/package/pinoccio-server&quot;&gt;pinoccio-server&lt;/a&gt; package allows you to run your own HQ, and I’d guess that while flashing the devices with the updated server address you’d also be able to update the refresh rate (obviously at the expense of battery life).&lt;/p&gt;

&lt;p&gt;Using &lt;a href=&quot;http://support.pinocc.io/hc/en-us/articles/200250539-ScoutScript-Overview#functions&quot;&gt;ScoutScript commands&lt;/a&gt; it’s possible to write functions and save them on the device, which is great if a scout on the mesh needs to carry out an action when another scout on the network detects an input. We didn’t find this section of the docs until after the event. Sad face.&lt;/p&gt;

&lt;p&gt;So at the moment I’m not sure how you’d go about streaming the live status of an input at a greater resolution than once per second, but I know it’s possible because of &lt;a href=&quot;http://projectable.me/post/48713397681/scout6050-i-was-asked-to-put-together-a-quick&quot;&gt;this video&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It’s a shame we only had the afternoon to play around with these devices, and I’ll be picking up a pair soon to play with over winter.&lt;/p&gt;

&lt;h3 id=&quot;summary&quot;&gt;Summary&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2014-08-27_15.jpg&quot; alt=&quot;Group hacking on hardware and laptops&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Thanks to everyone who’s helped out with the JSOxford Summer or Hacks and made it possible, and a huge thanks to &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=benjaminbenben&quot;&gt;Ben&lt;/a&gt; for coming up with the idea in the first place. We also owe &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=_alanshaw&quot;&gt;Alan Shaw&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=olizilla&quot;&gt;Oli Evans&lt;/a&gt; at least one or two beers for bringing their skills and enthusiasm and giving up a day to escape the big smoke.&lt;/p&gt;

&lt;p&gt;I’ve also got to say a big ‘thank you’ to the great sponsors who’ve made it possible to make the events almost free:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.b2m-solutions.com/&quot;&gt;B2M Solutions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.haybrook.co.uk/&quot;&gt;Haybrook IT Resourcing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://teamtreehouse.com/&quot;&gt;Treehouse&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.whiteoctober.co.uk/&quot;&gt;White October&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Looking forward to the autumn and winter, we’re keen to keep the JavaScript community in Oxford buzzing, so &lt;a href=&quot;https://twitter.com/intent/tweet?text=Yo%20@JSOxford!&quot;&gt;get in touch with us on Twitter&lt;/a&gt; to let us know:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;What you’d like to talk about or listen to at upcoming meetups.&lt;/li&gt;
  &lt;li&gt;Which events you’d like to see come to Oxford, and which events you’d love to see happen again.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’m not the only one to write up the event:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.marcusnoble.co.uk/2014-08-24-nodebots/&quot;&gt;Marcus Noble’s blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
				
                        	<pubDate>Wed, 27 Aug 2014 00:00:00 +0100</pubDate>
				<link>http://ryanbrooks.co.uk/posts/2014-08-27-jsoxford-nodebots-day/</link>
				<guid isPermaLink="true">http://ryanbrooks.co.uk/posts/2014-08-27-jsoxford-nodebots-day/</guid>
			</item>
		
			<item>
				<title>Groovy SOAP clients with ws-lite</title>
				<dc:creator></dc:creator>
				
					<description>&lt;p&gt;When we needed to quickly build a proof-of-concept to test a set of SOAP services I thought: “this is perfect for Groovy, and it’s DSL support will mean talking to SOAP won’t require stub generation or any of that pain”. I was almost right.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TLDR;&lt;/strong&gt; My client script is &lt;a href=&quot;https://gist.github.com/spikeheap/b5428f11834a0cea3822&quot;&gt;available as a GitHub gist&lt;/a&gt; for cannibalisation.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;SOAP is &lt;em&gt;almost&lt;/em&gt; legacy, but it’s still the only way to interface with large enterprise systems, at least in healthcare. Just as I’ve come to accept that CSV is &lt;strong&gt;the&lt;/strong&gt; way everyone sends lab and patient records (when they’re not exporting to Excel sheets), I wasn’t surprised when our project with MirthResults and MirthConnect only had SOAP calls to add patients to a component. No problem, I thought, just Google “Groovy SOAP” and I’ll be done in 10 minutes.&lt;/p&gt;

&lt;p&gt;So, the top result is &lt;a href=&quot;http://groovy.codehaus.org/Groovy+SOAP&quot;&gt;the Groovy SOAP documentation&lt;/a&gt;, which does say (although not very obviously) that it’s deprecated. That’s fine, it suggests its replacement, &lt;a href=&quot;http://groovy.codehaus.org/GroovyWS&quot;&gt;GroovyWS&lt;/a&gt;. But that page tells you to ‘be careful’ because the project is dormant. Not to worry, because it suggests looking at &lt;a href=&quot;https://github.com/jwagenleitner/groovy-wslite&quot;&gt;groovy-wslite&lt;/a&gt;. I’m already feeling like I’m entering the rabbit hole.&lt;/p&gt;

&lt;p&gt;Fortunately groovy-wslite is an active project and has commits (at the time of writing) from just over a month ago. The DSL is pretty straightforward so I set about connecting to the target WSDL and then added basic authentication. The documentation for the project is quite sparse, so this post is an attempt to bring together the bits that I needed.&lt;/p&gt;

&lt;p&gt;If you need anything other than ‘Basic’ HTTP autentication, stop right there. The project doesn’t seem to support ‘Digest’ or ‘NTLM’ authentication, so you might be better going for &lt;a href=&quot;http://stackoverflow.com/questions/15940234/how-to-do-a-soap-web-service-call-from-java-class&quot;&gt;plain Java SOAP&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In a simple script, you can just grab the wslite dependency and connect in a couple of lines:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-groovy&quot;&gt;@Grab(group=&#39;com.github.groovy-wslite&#39;, module=&#39;groovy-wslite&#39;, version=&#39;1.1.0&#39;)
 
import groovy.xml.*
import wslite.soap.*
import wslite.http.auth.*
 
def client = new SOAPClient(&#39;https://mirthtest.local:11443/ClinicalDocumentWSService/ClinicalDocumentWS?wsdl&#39;)
client.authorization = new HTTPBasicAuthorization(&quot;username&quot;, &quot;password&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It’s then trivially easy to do a SOAP call:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-groovy&quot;&gt;def response = client.send(
		connectTimeout:5000,
		readTimeout:20000,
		useCaches:false,
		followRedirects:false,
		sslTrustAllCerts:true) {
	envelopeAttributes &quot;xmlns:ejb&quot;:&quot;http://ejb.results.mirth.com/&quot;
	body {
		&quot;ejb:getSubjectGroupMemberIds&quot; {
			subjectGroupId( &#39;MySubjectGroup&#39; )
			subjectGroupStatusId( &#39;NEW&#39; )
		}
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The response we get back contains a bit of extra information, so it’s worth checking the response code before ploughing on:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-groovy&quot;&gt;def returnVal
if(response.httpResponse.statusMessage==&quot;OK&quot;) {
	returnVal = response.getSubjectGroupMemberIdsResponse.&#39;return&#39;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It’s worth noting that the response element is the name of the service call suffixed with ‘Response’. We can then dump the XML in a readable form to the console if we like:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-groovy&quot;&gt;println XmlUtil.serialize(returnVal) // Obviously use a logger here instead :)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can also interrogate the XML tree in the same way we would a normal object structure:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-groovy&quot;&gt;def memberCount = returnVal.results.list.size()
println &quot;There are ${memberCount} members initially&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the following gist I’ve abstracted the SOAP call away into its own method and then created a method for each SOAP call to give me a quick and easy interface to demo the SOAP calls from the console. Feel free to fork, copy, adapt to your own needs.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;@Grab(group=&amp;#39;com.github.groovy-wslite&amp;#39;, module=&amp;#39;groovy-wslite&amp;#39;, version=&amp;#39;1.1.0&amp;#39;)

import groovy.xml.*
import wslite.soap.*
import wslite.http.auth.*

def client = new SOAPClient(&amp;#39;https://dummy:11443/ClinicalDocumentWSService/ClinicalDocumentWS?wsdl&amp;#39;)
client.authorization = new HTTPBasicAuthorization(&amp;quot;mirth&amp;quot;, &amp;quot;password&amp;quot;)

// Grab the latest member list
def members = getSubjectGroupMemberIds(client, &amp;#39;GROUP001&amp;#39;, &amp;#39;NEW&amp;#39;).results
def memberCount = members.list.size()
println &amp;quot;There are ${memberCount} members initially&amp;quot;

// Get a patient
def retrievedSubject = getPatientsByFilterWithoutClinicalItems(client, {
    firstName(&amp;quot;Bob&amp;quot;)
    lastName(&amp;quot;Bunting&amp;quot;)
    numRows(1)
  }) 
def subjectId = retrievedSubject.results.list.id
println &amp;quot;Subject ID: ${subjectId}, name: ${retrievedSubject.results.list.name.first} ${retrievedSubject.results.list.name.middle} ${retrievedSubject.results.list.name.last}&amp;quot;

// Add the patient to the subjects of interest list (NEW, ACTIVE, EXCLUDED, RETIRED)
println XmlUtil.serialize( createSubjectGroupMember(client, &amp;#39;GROUP001&amp;#39;, &amp;#39;NEW&amp;#39;, &amp;#39;MYSTATUS&amp;#39;, subjectId) )

// Grab the latest member list
members = getSubjectGroupMemberIds(client, &amp;#39;GROUP001&amp;#39;, &amp;#39;NEW&amp;#39;).results
assert  members.list.size() == (memberCount + 1)

println XmlUtil.serialize(members)


// SOAP call methods

def getSubjectGroupMemberIds(client, groupId, groupStatusId){
  doSOAPRequest( client, &amp;#39;getSubjectGroupMemberIds&amp;#39;, {
    subjectGroupId( groupId )
    subjectGroupStatusId( groupStatusId )
  })
}

/**
 * Typically search by forename, surname, dob and gender
 * also by patient alias (NHS # or MRN #)
 **/
def getPatientsByFilterWithoutClinicalItems(client, subjectFilter){
  doSOAPRequest( client, &amp;#39;getPatientsByFilterWithoutClinicalItems&amp;#39;, {
    subjectFilterModel subjectFilter
  })
}


def createSubjectGroupMember(client, groupId, groupStatusId, recFacilityId, patientId){
  doSOAPRequest( client, &amp;#39;createSubjectGroupMember&amp;#39;, {
    subjectGroupId( groupId )
    subjectGroupStatusId( groupStatusId )
    subjectId( patientId )
    receivingFacilityId ( recFacilityId )
    createSubjectGroupMemberExt( 0 ) // &amp;#39;0&amp;#39; causes an update to fail silently if it exists already.
  })
}


/**
 * Do a SOAP request with the given command and payload.
 * Doesn&amp;#39;t massage the payload, this method is just to reduce copy/paste for the SOAP request.
 **/
def doSOAPRequest(client, command, commandBody){
  def response = client.send(
                           connectTimeout:5000,
                           readTimeout:20000,
                           useCaches:false,
                           followRedirects:false,
                           sslTrustAllCerts:true) {
    envelopeAttributes &amp;quot;xmlns:ejb&amp;quot;:&amp;quot;http://ejb.results.mirth.com/&amp;quot;
    body {
        &amp;quot;ejb:${command}&amp;quot;(commandBody)
    }
  }
  okStatus(response) ? response.&amp;quot;${command}Response&amp;quot;.&amp;#39;return&amp;#39; : null
}


/**
 * Check that the HTTP response is good.
 * Shamelessly lifted from https://confluence.sakaiproject.org/display/WEBSVCS/WS-Groovy
 **/
def okStatus( SOAPResponse response ){
  return response.httpResponse.statusMessage==&amp;quot;OK&amp;quot;
}
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/spikeheap/b5428f11834a0cea3822.js&quot;&gt; &lt;/script&gt;

</description>
				
                        	<pubDate>Thu, 21 Aug 2014 00:00:00 +0100</pubDate>
				<link>http://ryanbrooks.co.uk/posts/2014-08-21-groovy-soap-wslite/</link>
				<guid isPermaLink="true">http://ryanbrooks.co.uk/posts/2014-08-21-groovy-soap-wslite/</guid>
			</item>
		
			<item>
				<title>Oxford&#39;s Summer of Hacks 2014 – Code Retreat</title>
				<dc:creator></dc:creator>
				
					<description>&lt;p&gt;On Sunday the 6th of July we ran the second Oxford Code Retreat, so here’s a few notes I’ve made about the event. &lt;!--I also made some notes on hosting Code Retreats [here](/posts/2014-08-06-hosting-code-retreat)
--&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&quot;the-jsoxford-summer-of-hacks-code-retreat&quot;&gt;The JSOxford Summer of Hacks Code Retreat&lt;/h2&gt;

&lt;p&gt;Okay, so it’s not a super-snappy title, but the &lt;a href=&quot;http://jsoxford.com/2014/summer-of-hacks/&quot;&gt;Summer of Hacks&lt;/a&gt; has been a great success so far. The Code Retreat was the second event in the series, and this time we did it for Ruby, Python and JavaScript.&lt;/p&gt;

&lt;p&gt;Removing the language restriction was quite nice, and although we initially had a 90/10 split of JavaScript/Python for the first session that evened out to 50/50 after lunch. No dedicated Rubyists turned up, but Pete still managed to test out his Ruby test runner.&lt;/p&gt;

&lt;p&gt;The nice thing about the Code Retreat format is that it plays well to most languages, so running Python and JavaScript alongside each other didn’t require any special tooling. I’m a huge fan of polyglot events (being a multi-linguist myself), and it was great to see a mix of people rather than the JavaScripters at one end and Pythonistas at the other.&lt;/p&gt;

&lt;p&gt;The turnout for this event was completely different to the last one, and it was great to see the majority who turned up were testing/pair-programming newbies. We had intended to make TDD/pair-programming secondary, but through each session we had a reasonably constant flow of TDD-related questions so that obviously didn’t happen!&lt;/p&gt;

&lt;p&gt;One of the things I love about events like this is how it makes me question the things I’ve come to take for granted. A couple of times I was faced with questions about TDD taking too long or appearing to be a big time drain, and whereas online you might just dismiss questions like that with “they just don’t get it”, it has really helped me clarify my reason for loving TDD and think about the inherent tradeoffs and assumptions.&lt;/p&gt;

&lt;p&gt;So because I made everyone suffer my retrospectives on Sunday, here’s my quick retro:&lt;/p&gt;

&lt;h3 id=&quot;what-went-well&quot;&gt;What went well?&lt;/h3&gt;

&lt;h5 id=&quot;tdd--pair-programming&quot;&gt;TDD &amp;amp; pair programming&lt;/h5&gt;

&lt;p&gt;All my planning had been around the idea that we’d done TDD/pair-programming as a focus in the first Code Retreat, so it was old-hat and would be boring to push it a second time. Wrong! There were quite a few attendees who hadn’t really used TDD in anger or who were just experiencing pair-programming for the first time, so I had quite a few discussions about how it worked ‘in real life’ and whether it was just a construct which is nice for events but isn’t really practical.&lt;/p&gt;

&lt;p&gt;This accurately reflects the experiences I’ve had recruiting for developers at all levels, and I’m much less surprised when I hear people describe testing as a secondary activity or something that would be nice if there was more time. In fairness most developers seem to agree that tests are necessary, and there is still a big debate about what constitutes the right amount of testing, and if it should be part of the design/development process. Either way it was good to be part of the discussion!&lt;/p&gt;

&lt;h5 id=&quot;defensive-programming&quot;&gt;Defensive programming&lt;/h5&gt;

&lt;p&gt;Our second session was to have a development battle. When writing tests it followed the standard TDD mantra of write as little as possible to get the test to fail, but when implementing the function the approach had to be to do it in the most obscure or wrong way possible, whilst still making the test pass.&lt;/p&gt;

&lt;p&gt;The resultant code was (obviously) atrocious and tended towards micro-methods, but it was interesting to see how everyone perceived it: was it a poor activity or a chance to think about one of the purposes of writing tests in a collaborative environment? Some of the code I saw closely resembled production code I’ve seen from projects that I won’t name here which had been running for much longer than 20 minutes, but no-one sets out to produce code that poor, right?&lt;/p&gt;

&lt;h5 id=&quot;discussions--the-people&quot;&gt;Discussions &amp;amp; the people&lt;/h5&gt;

&lt;p&gt;Of course, I have to say this, but it was genuinely good fun running the event, and it never felt like hard work getting contributions during the post-session chats. There was almost always something interesting being worked through, sometimes heatedly! I am a strong believer that the point of these events is mostly to get interesting people into the same room so we can all learn things from each other. Events really are only as good as the people who turn up, so thanks to everyone who made it.&lt;/p&gt;

&lt;h3 id=&quot;what-could-have-gone-better&quot;&gt;What could have gone better&lt;/h3&gt;

&lt;h5 id=&quot;focus-on-the-meaning&quot;&gt;Focus on the meaning&lt;/h5&gt;
&lt;p&gt;When we set the kata and planned the sessions the focus was on what we were trying to get the attendees to think about, working backwards to find constraints which would exercise that. It all (sort of) went to plan, but during the event I completely forgot to focus on that same end goal! As a result I think a few people were left wondering why (for example) there wasn’t a planning session before the round-table programming session.&lt;/p&gt;

&lt;h5 id=&quot;the-venue&quot;&gt;The venue&lt;/h5&gt;
&lt;p&gt;The &lt;a href=&quot;http://www.thejamfactoryoxford.com/&quot;&gt;Jam Factory&lt;/a&gt; is a great pub with a friendly feel and lots of light, and it would be great for an evening party or talk. In the height of summer the Boiler Room really is that, a glass-roofed hotbox. All that light streaming in also meant our projectors were useless. Fortunately we had a backup 40” TV, but that was really a little too small while still taking up a load of space.&lt;/p&gt;

&lt;p&gt;Being an (almost) free event meant we had to fund the venue and catering through sponsorship. Our sponsors &lt;a href=&quot;http://www.haybrook.co.uk/&quot;&gt;Haybrook IT Recruitment&lt;/a&gt; and &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt; were amazing, but we struggled to make their contributions, along with the £5 entry fee, cover all the things. Lesson learned: figure out the constraints of the venue in advance (like not being able to bring our own refreshments &amp;amp; snacks) and either work with them to compromise, ask for more sponsorship or change the venue.&lt;/p&gt;

&lt;p&gt;We were keen to host things at the Jam Factory so it didn’t feel like work, and was more friendly and informal than the standard conference-style event, and I think it almost achieved that.&lt;/p&gt;

&lt;h5 id=&quot;the-testing-wrappers&quot;&gt;The testing wrappers&lt;/h5&gt;

&lt;p&gt;We had a grand vision for getting real-time results from the pairs to build a live, developing game of life on the projector, as well as collecting stats for pretty graphs. We also wanted to have test wrappers for each language which would get as close to zero-setup as possible for attendees. There was a great push by George and Pete to knock out Python, Ruby and JavaScript test runners, and we had limited success in actually running the tests. Unfortunately the test runners weren’t as stable as we would have liked so they were quickly relegated for some.&lt;/p&gt;

&lt;p&gt;Since the event Uxebu have open-sourced &lt;a href=&quot;https://github.com/uxebu/tddbin-frontend&quot;&gt;TDDBin&lt;/a&gt;, which we’ve used with great success for previous events. It’s great to see them open up the code, and we’ll certainly build on that for future events.&lt;/p&gt;

&lt;h3 id=&quot;summary&quot;&gt;Summary&lt;/h3&gt;
&lt;p&gt;Each time I’ve run a Code Retreat there are things I’d do completely differently next time, and to be honest it would be boring if that weren’t the case. As always it was an interesting event, and hopefully the attendees got as much out of it as I did.&lt;/p&gt;

&lt;p&gt;A few people have written up the day. If you’ve done the same let me know and I’ll add you to the list below:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://tomlane.me/2014/07/jsoxford-code-retreat/&quot;&gt;Tom Lane&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://danielthepope.wordpress.com/2014/07/09/tdd-is-still-alive-jsoxford-code-retreat/&quot;&gt;Dan Pope&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.marcusnoble.co.uk/12-07-2014-jsoxford-code-retreat&quot;&gt;Marcus Noble&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
				
                        	<pubDate>Wed, 06 Aug 2014 16:58:40 +0100</pubDate>
				<link>http://ryanbrooks.co.uk/posts/2014-08-06-code-retreat-thoughts/</link>
				<guid isPermaLink="true">http://ryanbrooks.co.uk/posts/2014-08-06-code-retreat-thoughts/</guid>
			</item>
		
			<item>
				<title>Testing Rhino JavaScript with Eclipse, Gradle, Groovy and Spock</title>
				<dc:creator></dc:creator>
				
					<description>&lt;p&gt;A colleague was wrangling with JavaScript testing, but with an unusual constraint: the code runs on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Rhino&quot;&gt;Rhino JS engine&lt;/a&gt;. After a bit of head-banging, I learned that continuously testing JavaScript written for Rhino needn’t be arduous.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&quot;other-potential-solutions&quot;&gt;Other potential solutions&lt;/h2&gt;

&lt;p&gt;There are a number of ways of tackling this problem. Initially we attempted to use one of the many existing JavaScript testing libraries, running on Rhino. Jasmine running on Karma was my first choice, but we soon hit issues with &lt;code&gt;require&lt;/code&gt; not being present. Since giving up on that avenue I’ve discovered &lt;a href=&quot;http://www.angrycoding.com/2011/09/mozilla-rhino-commonjs-module-support.html&quot;&gt;CommonJS for Rhino&lt;/a&gt;. That solution may be preferable because it allows you to write your tests in JavaScript, but I love Spock’s data driven capabilities and the cleanness of spec tests, so I’m not disappointed with our result.&lt;/p&gt;

&lt;h2 id=&quot;configuring-gradle&quot;&gt;Configuring Gradle&lt;/h2&gt;

&lt;p&gt;We need Gradle to download our dependencies and run the tests, so the first thing to do is initialise a Gradle project:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;gradle init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And then edit the &lt;code&gt;build.gradle&lt;/code&gt; file to look something like the following:&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;apply plugin: &amp;#39;java&amp;#39;
apply plugin: &amp;#39;groovy&amp;#39;
apply plugin: &amp;#39;eclipse&amp;#39;

repositories {
    jcenter()
}

dependencies {
    compile &amp;#39;org.codehaus.groovy:groovy-all:2.1.5&amp;#39;
    testCompile &amp;quot;org.spockframework:spock-core:0.7-groovy-2.0&amp;quot; 
	
    compile &amp;#39;org.mozilla:rhino:1.7R4&amp;#39;
    compile fileTree(dir: &amp;#39;lib&amp;#39;, include: &amp;#39;*.jar&amp;#39;)
}&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/spikeheap/9808514.js?file=build.gradle&quot;&gt; &lt;/script&gt;

&lt;p&gt;This will ensure we’ve got Rhino on our classpath, and can use Spock to write our tests. The last &lt;code&gt;compile&lt;/code&gt; dependency allows us to include JAR files in a &lt;code&gt;lib&lt;/code&gt; directory, which can be handy if you use libraries not available through Bintray or Maven.&lt;/p&gt;

&lt;p&gt;We’ll use the standard Maven source locations, which we need to create manually:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mkdir -p src/{main,test}/{groovy,js}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We’ve now got a Gradle project which we can test with &lt;code&gt;gradle check&lt;/code&gt;, although there’s not much to see at the moment.&lt;/p&gt;

&lt;h2 id=&quot;eclipse&quot;&gt;Eclipse&lt;/h2&gt;

&lt;p&gt;There are a couple of plugins we need for Eclipse&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;a href=&quot;http://groovy.codehaus.org/Eclipse+Plugin&quot;&gt;Groovy-Eclipse plugin&lt;/a&gt; (requires the http://dist.springsource.org/release/GRECLIPSE/e4.3/ update site).&lt;/li&gt;
  &lt;li&gt;The &lt;a href=&quot;https://github.com/spring-projects/eclipse-integration-gradle/&quot;&gt;Gradle IDE plugin&lt;/a&gt; (requires the http://dist.springsource.com/release/TOOLS/gradle update site).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once they’re installed run &lt;code&gt;gradle eclipse&lt;/code&gt; in the terminal to generate the Eclipse settings files, and then import it into Eclipse with &lt;code&gt;File &amp;gt; Import... &amp;gt; General &amp;gt; Existing Projects into Workspace&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;running-tests&quot;&gt;Running tests&lt;/h3&gt;

&lt;p&gt;In the &lt;code&gt;Run &amp;gt; Run Configurations&lt;/code&gt; configuration, add a JUnit run configuration set to Run all tests in the selected project, package or source folder (selecting the root of tests).&lt;/p&gt;

&lt;p&gt;You can now run the tests (even Spock tests) just like normal!&lt;/p&gt;

&lt;h1 id=&quot;testable-javascript&quot;&gt;Testable JavaScript&lt;/h1&gt;

&lt;p&gt;We’ll create a sample JavaScript file to test in &lt;code&gt;src/main/js/littleFunction.js&lt;/code&gt;, containing the following:&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;function addTogether(a, b, c){
	return a + b + c;
}&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/spikeheap/9808514.js?file=littleFunction.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;That code isn’t likely to win any awards, but we can check that it works by writing a specification.&lt;/p&gt;

&lt;h2 id=&quot;writing-tests&quot;&gt;Writing tests&lt;/h2&gt;

&lt;p&gt;Create a Groovy class named &lt;code&gt;LittleFunctionSpec.groovy&lt;/code&gt; in &lt;code&gt;src/test/groovy/my/package/&lt;/code&gt;, containing the following:&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;package my.package

class LittleFunctionSpec extends Specification{
	Context context
	Scriptable scope
	
	/**
	 * Setup, prior to every spec test
	 */
	void setup(){
		 context = Context.enter()

		// Set version to JavaScript1.2 so that we get object-literal style
		// printing instead of &amp;quot;[object Object]&amp;quot;
		context.setLanguageVersion(Context.VERSION_1_8)

		// Initialize the standard objects (Object, Function, etc.)
		// This must be done before scripts can be executed.
		scope = context.initStandardObjects()
	}
	
	/**
	 * Teardown method, run after each test. This just ensures we&amp;#39;ve left the Rhino context.
	 */
	void cleanup(){
		Context.exit();
	}
	
	/**
	 * Load a JavaScript file into the Rhino engine. For resources held within the project you will probably want a filename like:
	 * 		&amp;quot;src/main/js/componentX/script.js&amp;quot;
	 * @param fileName The name of the file to be loaded.
	 */
	void loadJSIntoContext(String fileName) {
		File emulatorFile = fileName as File
		context.evaluateString(scope, emulatorFile.text, emulatorFile.name, 1, null)
	}
}&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/spikeheap/9808514.js?file=LittleFunctionSpec.groovy&quot;&gt; &lt;/script&gt;

&lt;p&gt;This gives us our Rhino environment (context). Note that if you want to use &lt;code&gt;XML&lt;/code&gt; objects you’ll need to use a context version &amp;gt; 1.7. All we need to do now is add a test:&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;// Add into LittleFunctionSpec.groovy
def &amp;quot;check little function adds numbers together&amp;quot;(){
	given: &amp;quot;I have littleFunction.js loaded&amp;quot;
	loadJSIntoContext(&amp;quot;src/main/js/littleFunction.js&amp;quot;)
	
	when: &amp;quot;I run the addTogether function for 1, 2, and 3&amp;quot;
	String jsExercise = &amp;quot;var result = addTogether(1,2,3);&amp;quot;
	context.evaluateString(scope, jsExercise, &amp;quot;TestScript&amp;quot;, 1, null)
	
	then: &amp;quot;The result is 6&amp;quot;
	scope.get(&amp;quot;result&amp;quot;, scope) == 6
}&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/spikeheap/9808514.js?file=LittleFunctionSpecPartial1.groovy&quot;&gt; &lt;/script&gt;

&lt;p&gt;Hopefully that specification is pretty self-explanatory. For more information &lt;a href=&quot;http://spock-framework.readthedocs.org/en/latest/&quot;&gt;Check out the Spock documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The example above used a single value, but we probably want to check quite a few. Spock’s &lt;a href=&quot;http://spock-framework.readthedocs.org/en/latest/data_driven_testing.html&quot;&gt;Data Driven Testing support&lt;/a&gt; makes this simple, so we can rewrite the test as:&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;// Add into LittleFunctionSpec.groovy
@Unroll
def &amp;quot;check addTogether behaves for #a, #b, #c&amp;quot;(){
	given: &amp;quot;I have littleFunction.js loaded&amp;quot;
	loadJSIntoContext(&amp;quot;src/main/js/littleFunction.js&amp;quot;)
	
	when: &amp;quot;I run the addTogether function for 1, 2, and 3&amp;quot;
	String jsExercise = &amp;quot;var result = addTogether(&amp;quot;+a+&amp;quot;,&amp;quot;+b+&amp;quot;,&amp;quot;+c+&amp;quot;);&amp;quot;
	context.evaluateString(scope, jsExercise, &amp;quot;TestScript&amp;quot;, 1, null)
	
	then: &amp;quot;The result is #c&amp;quot;
	scope.get(&amp;quot;result&amp;quot;, scope) == (a + b + c)
	
	where:
	a   | b   | c
	0   | 0   | 0
	9   | 1   | 0
	5   | 0   | 5
	1   | 1   | 1
	0   | 4   | 24
	1231| 0   | 0
	9999| 0   | 4325
	0   | 035 | 230
}&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/spikeheap/9808514.js?file=LittleFunctionSpecPartial2.groovy&quot;&gt; &lt;/script&gt;

&lt;h2 id=&quot;running-tests-1&quot;&gt;Running tests&lt;/h2&gt;

&lt;p&gt;Running the tests is as easy as &lt;code&gt;gradle check&lt;/code&gt;, or pushing the &lt;code&gt;run&lt;/code&gt; button in Eclipse. Doing the former, your test results will be output into an easy-to-read HTML file as well as JUnit XML.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Using a few simple steps we’ve set up a Gradle project to run Spock tests over Rhino JavaScript, with the added bonus of being able to use Eclipse.&lt;/p&gt;

&lt;p&gt;Because we can now run tests with a single command and interpret the result with most tools (either through the Gradle exit code or the JUnit output), adding this to a continuous build system like &lt;a href=&quot;http://travis-ci.org&quot;&gt;Travis&lt;/a&gt; or &lt;a href=&quot;http://jenkins-ci.org/&quot;&gt;Jenkins&lt;/a&gt; is simple!&lt;/p&gt;

</description>
				
                        	<pubDate>Thu, 27 Mar 2014 15:58:40 +0000</pubDate>
				<link>http://ryanbrooks.co.uk/posts/2014-03-27-testing-rhino-js-spock/</link>
				<guid isPermaLink="true">http://ryanbrooks.co.uk/posts/2014-03-27-testing-rhino-js-spock/</guid>
			</item>
		
	</channel>
</rss>